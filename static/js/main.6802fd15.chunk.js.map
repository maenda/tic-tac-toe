{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","squares","key","startingSquare","endingSquare","push","renderSquare","rows","length","renderRow","renderRows","React","Component","Game","_this2","Object","_Users_m_mrepos_tic_tac_toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_m_mrepos_tic_tac_toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_m_mrepos_tic_tac_toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","gridLocation","stepNumber","xIsNext","slice","calculateWinner","setState","concat","step","_this3","current","winner","currentLocation","classes","moves","map","move","findCurrentSquare","desc","jumpTo","status","handleClick","lines","_lines$i","_Users_m_mrepos_tic_tac_toe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"oLAIA,SAASA,EAAOC,GACd,OACEC,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACVC,QAASL,EAAMK,SAEZL,EAAMM,WAKTC,uLACSC,GAAG,IAAAC,EAAAC,KACd,OACET,EAAAC,EAAAC,cAACJ,EAAD,CACEO,MAAOI,KAAKV,MAAMW,QAAQH,GAC1BH,QAAS,kBAAMI,EAAKT,MAAMK,QAAQG,IAClCI,IAAKJ,sCAKDK,GAIR,IAHA,IAAIF,EAAU,GACRG,EAAeD,EAAiB,EAE7BL,EAAIK,EAAgBL,EAAIM,EAAcN,IAC7CG,EAAQI,KAAKL,KAAKM,aAAaR,IAGjC,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYQ,IAAKC,GAC7BF,wCASL,IAHA,IAAIM,EAAO,GACPJ,EAAiB,EAEZL,EAAIE,KAAKV,MAAMW,QAAQO,OAAQV,EAAI,EAAGA,IAC1CA,EAAI,IAAM,GACXS,EAAKF,KAAKL,KAAKS,UAAUN,IAE3BA,IAGF,OAAOI,mCAIP,IAAMA,EAAOP,KAAKU,aAElB,OACEnB,EAAAC,EAAAC,cAAA,WAAMc,UA5CQI,IAAMC,WAiDpBC,cACJ,SAAAA,EAAYvB,GAAO,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAf,KAAAa,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAf,KAAAe,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnB,KAAMV,KACD8B,MAAQ,CACXC,QAAS,CAAC,CACRpB,QAASqB,MAAM,GAAGC,KAAK,MACvBC,aAAc,OAEhBC,WAAY,EACZC,SAAS,GARMZ,2EAYPhB,GACV,IAAMuB,EAAUrB,KAAKoB,MAAMC,QAAQM,MAAM,EAAG3B,KAAKoB,MAAMK,WAAa,GAE9DxB,EADUoB,EAAQA,EAAQb,OAAS,GACjBP,QAAQ0B,QAE5BC,EAAgB3B,IAAYA,EAAQH,KAIxCG,EAAQH,GAAKE,KAAKoB,MAAMM,QAAU,IAAM,IACxC1B,KAAK6B,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvB7B,QAASA,EACTuB,aAAc1B,KAEhB2B,WAAYJ,EAAQb,OACpBkB,SAAU1B,KAAKoB,MAAMM,0CAIlBK,GACL/B,KAAK6B,SAAS,CACZJ,WAAYM,EACZL,QAAUK,EAAO,IAAO,qCAInB,IAAAC,EAAAhC,KACDqB,EAAUrB,KAAKoB,MAAMC,QACrBY,EAAUZ,EAAQrB,KAAKoB,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQhC,SACjCkC,EAAkBF,EAAQT,aAC5BY,EAAU,GAERC,EAAQhB,EAAQiB,IAAI,SAACP,EAAMQ,GAC/BH,EAAWD,IAAoBJ,EAAKP,aAAgB,OAAS,GAC7D,IAAMA,EACmB,OAAtBO,EAAKP,aAAN,IAAAM,OAuER,SAA2BN,GAazB,MAZgB,CACd,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAGSA,GAnFDgB,CAAkBT,EAAKP,cAD/B,KAEI,GAEAiB,EAAOF,EAAI,eAAAT,OACES,GACf,mBAEF,OACEhD,EAAAC,EAAAC,cAAA,MACEC,UAAW0C,EACXlC,IAAKqC,GAELhD,EAAAC,EAAAC,cAAA,UACEE,QAAS,kBAAMqC,EAAKU,OAAOH,IAC3B7C,UAAW0C,GAEVK,EAJH,IAIUjB,MAMdmB,EAAST,EAAM,WAAAJ,OACJI,GADI,gBAAAJ,OAEC9B,KAAKoB,MAAMM,QAAU,IAAM,KAE/C,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACI,EAAD,CACEI,QAASgC,EAAQhC,QACjBN,QAAS,SAACG,GAAD,OAAOkC,EAAKY,YAAY9C,OAGrCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,WAAMkD,GACNpD,EAAAC,EAAAC,cAAA,UAAK4C,YAvFI1B,IAAMC,WAqGzB,SAASgB,EAAgB3B,GAWvB,IAVA,IAAM4C,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA/C,EAAI,EAAGA,EAAI+C,EAAMrC,OAAQV,IAAK,KAAAgD,EAAA/B,OAAAgC,EAAA,EAAAhC,CACnB8B,EAAM/C,GADa,GAC9BN,EAD8BsD,EAAA,GAC3BE,EAD2BF,EAAA,GACxBG,EADwBH,EAAA,GAErC,GAAI7C,EAAQT,IAAMS,EAAQT,KAAOS,EAAQ+C,IAAM/C,EAAQT,KAAOS,EAAQgD,GACpE,OAAOhD,EAAQT,GAGnB,OAAO,KAtBT0D,IAASC,OACP5D,EAAAC,EAAAC,cAACoB,EAAD,MACAuC,SAASC,eAAe","file":"static/js/main.6802fd15.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n        key={i}\n      />\n    );\n  }\n\n  renderRow(startingSquare) {\n    let squares = [];\n    const endingSquare = startingSquare + 3;\n\n    for (let i = startingSquare; i < endingSquare; i++) {\n      squares.push(this.renderSquare(i));\n    }\n\n    return (\n      <div className=\"board-row\" key={startingSquare}>\n        {squares}\n      </div>\n    );\n  }\n\n  renderRows() {\n    let rows = [];\n    let startingSquare = 0;\n\n    for (let i = this.props.squares.length; i > 0; i--) {\n      if(i % 3 === 0) {\n        rows.push(this.renderRow(startingSquare));\n      }\n      startingSquare++;\n    }\n\n    return rows;\n  }\n\n  render() {\n    const rows = this.renderRows();\n\n    return (\n      <div>{rows}</div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        gridLocation: null,\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        gridLocation: i,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const currentLocation = current.gridLocation;\n    let classes = '';\n\n    const moves = history.map((step, move) => {\n      classes = (currentLocation === step.gridLocation) ? 'bold' : '';\n      const gridLocation =\n        (step.gridLocation !== null)\n          ? `(${findCurrentSquare(step.gridLocation)})`\n          : '';\n\n      const desc = move\n        ? `Go to move #${move}`\n        : 'Go to game start';\n\n        return (\n          <li\n            className={classes}\n            key={move}\n          >\n            <button\n              onClick={() => this.jumpTo(move)}\n              className={classes}\n            >\n              {desc} {gridLocation}\n            </button>\n          </li>\n        )\n    });\n\n    let status = winner\n      ? `Winner: ${winner}`\n      : `Next player: ${this.state.xIsNext ? 'X' : 'O' }`;\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction findCurrentSquare(gridLocation) {\n  const squares = [\n    [1, 1],\n    [1, 2],\n    [1, 3],\n    [2, 1],\n    [2, 2],\n    [2, 3],\n    [3, 1],\n    [3, 2],\n    [3, 3],\n  ];\n\n  return squares[gridLocation];\n}\n"],"sourceRoot":""}